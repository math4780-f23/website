---
title: "Exercise 1: Overview Solution"
editor: source
reference-location: margin
---

::: callout-note
Exercises are for practice purpose only.
:::

## Overview of Regression
<!-- ISL 2.4 2.6 -->
1. Describe three real-life applications in which regression might be useful. Describe the response, as well as the predictors. Is the goal of each application inference or prediction? Explain your answer.

```{r}
# i. CEO salary. inference. predictors: age, industry experience, industry,
# years of education. response: salary.
# 
# ii. car part replacement. inference. response: life of car part. predictors: age
# of part, mileage used for, current amperage.
# 
# iii. illness classification, prediction, response: age of death,
# input: current age, gender, resting heart rate, resting breath rate, mile run
# time.

```



2. Describe the differences between a parametric and a non-parametric statistical learning approach.


```{r}
# A parametric approach reduces the problem of estimating f down to one of
# estimating a set of parameters because it assumes a form for f.
# 
# A non-parametric approach does not assume a functional form for f and so
# requires a very large number of observations to accurately estimate f.
# 
# The advantages of a parametric approach to regression or classification are the
# simplifying of modeling f to a few parameters and not as many observations are
# required compared to a non-parametric approach.
# 
# The disadvantages of a parametric approach to regression or classification
# are a potential to inaccurately estimate f if the form of f assumed is wrong or
# to overfit the observations if more flexible models are used.
```

## Checking Data with R
<!-- ISL 2.10 -->
1. Load in the `Boston` data set in `ISLR2` package.

```{r}
library(ISLR2)
data("Boston")
```

2. How many rows are in this data set? How many columns? What do the rows and columns represent?

```{r}
dim(Boston)
?Boston
```

3. Make some pairwise scatterplots of the predictors (columns) in this data set. Describe your findings.

```{r}
pairs(Boston, cex = 0.4, pch = 16)
```


4. Are any of the predictors associated with per capita crime rate? If so, explain the relationship.

```{r}
# check the pairs
```



5. Do any of the census tracts of Boston appear to have particularly high crime rates? Tax rates? Pupil-teacher ratios? Comment on the range of each predictor.

```{r}
par(mfrow = c(1, 3))
plot(Boston$crim)
plot(Boston$tax)
plot(Boston$ptratio)
summary(Boston$crim)
summary(Boston$tax)
summary(Boston$ptratio)
```


6. How many of the census tracts in this data set bound the Charles river?

```{r}
sum(Boston$chas)
```


7. What is the median pupil-teacher ratio among the towns in this data set?

```{r}
median(Boston$ptratio)
```

8. Which census tract of Boston has lowest median value of owneroccupied homes? What are the values of the other predictors for that census tract, and how do those values compare to the overall ranges for those predictors? Comment on your findings.

```{r}
idx <- which(Boston$medv == min(Boston$medv))
Boston[idx, ]
apply(Boston, 2, range)
```

9. In this data set, how many of the census tracts average more than seven rooms per dwelling? More than eight rooms per dwelling? Comment on the census tracts that average more than eight rooms per dwelling.

```{r}
sum(Boston$rm > 7)
sum(Boston$rm > 8)
summary(Boston)
summary(subset(Boston,rm>8))
```




## Probability and Statistics
<!-- ROS 3.3, 4.5 -->
1. Plot normal density curves with different choices of mean and standard deviation.

<!-- # https://www.statology.org/plot-normal-distribution-r/ -->

```{r}
curve(dnorm(x, 0, 1), from = -10, to = 10, main = "normal densities",
      ylab = "density value", las = 1)
curve(dnorm(x, 5, 1), col = 2, add = TRUE)
curve(dnorm(x, -5, 1), col = 3, add = TRUE)
curve(dnorm(x, 0, 2), col = 4, add = TRUE)
curve(dnorm(x, 0, 3), col = 5, add = TRUE)
legend("topright", 
       c("N(0, 1)", "N(5, 1)", "N(-5, 1)", "N(0, 4)", "N(0, 9)"),
       col = 1:5, lty = 1, bty = "n")
```

2. Choose a continuous variable in `Boston`. Use the `sample()` function to draw a simple random sample of size 20 from this population. Calculate the sample average.

```{r}
size <- 100
crim_sam <- sample(Boston$crim, size = size)
mean(crim_sam)
```


3. Repeat 2. several times to get a sampling distribution of the sample mean.

```{r}
sample_mean_sample <- replicate(n = 1000, expr = mean(sample(Boston$crim, size = size)))
hist(sample_mean_sample)
abline(v = mean(Boston$crim), col = 2)
```

