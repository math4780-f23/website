---
title: "Exercise 7: Nonparametric Regression Solution"
editor: source
reference-location: margin
---

::: callout-note
Exercises are for practice purpose only.
:::



## Nonparametric Regression

<!-- Yu -->

1. For the `Boston` data, use `medv` as the response and `lstat` as the predictor, then do

    (a) Kernel Smoother
    (b) Local Linear Regression
    (c) LOESS
    
    Try to find the best parameter of each method to get the best fit.
    
    
```{r}
library(ISLR2)
attach(Boston)
```

```{r}
bw <- c(0.2, 0.5, 0.8, 1, 2, 3, 4)
plot(lstat, medv, main = "Kernel Smoother")
for (i in 1: length(bw)) {
    ks_fit <- KernSmooth::locpoly(lstat, medv, degree = 0, bandwidth = bw[i], 
                                   kernel = "normal")
    lines(ks_fit$x, ks_fit$y, col = i, lwd = 2)
}
legend("topright", paste("bandwidth =", bw), lwd = 2, col = 1:length(bw))

```


```{r}
bw <- c(0.2, 0.5, 0.8, 1, 2, 3, 4)
plot(lstat, medv, main = "Local Linear Regression")
for (i in 1: length(bw)) {
    local_fit <- KernSmooth::locpoly(lstat, medv, degree = 1, bandwidth = bw[i], 
                                   kernel = "normal")
    lines(local_fit$x, local_fit$y, col = i, lwd = 2)
}
legend("topright", paste("bandwidth =", bw), lwd = 2, col = 1:length(bw))
```


```{r}
span_vec <- c(0.1, 0.3, 0.5, 1)
plot(lstat, medv, main = "LOESS")
for (i in 1: length(span_vec)) {
  loess_fit <- loess(medv ~ lstat, span = span_vec[i], degree = 2)
  lines(lstat[order(lstat)], loess_fit$fitted[order(lstat)], col = i, lwd = 2)
}
legend("topright", paste("span =", span_vec), lwd = 2, col = 1:length(span_vec))
```

